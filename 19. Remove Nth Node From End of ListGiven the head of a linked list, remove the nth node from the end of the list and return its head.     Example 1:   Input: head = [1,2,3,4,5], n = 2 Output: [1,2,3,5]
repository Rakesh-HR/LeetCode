Given the head of a linked list, remove the nth node from the end of the list and return its head.



/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) {
   
        ListNode start = new ListNode(0);

        ListNode slow= start, fast=slow;
        slow.next=head;
        for(int i=0;i<=n;i++){
            fast=fast.next;
            //System.out.println("f v= " +fast.val);
        }
        while(fast!=null){
            fast=fast.next;
            System.out.println(slow.val);
            //if(fast!=null)
                slow=slow.next;
            
        }
       //if(slow.next!=null)
            slow.next=slow.next.next;
        //else 
          //  return nul;
        return start.next;
        
        
    }
}
