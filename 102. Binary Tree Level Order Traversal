/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> levelOrder(TreeNode root) {
        List<List<Integer>> li= new ArrayList<>();
        if(root==null)
            return li;
        Queue<TreeNode> q= new LinkedList<>();
        q.add(root);
        while(!q.isEmpty()){
            List<Integer> list= new ArrayList<>();
            int len=q.size();
            for(int i=0;i<len;i++){
                TreeNode c= q.poll();
                list.add(c.val);
                if(c.left!=null)
                    q.add(c.left);
                if(c.right!=null)
                    q.add(c.right);
            }
            li.add(list);
        }
        return li;
    }
}
