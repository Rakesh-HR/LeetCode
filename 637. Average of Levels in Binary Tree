/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
 
class Solution {
    public List<Double> averageOfLevels(TreeNode root) {
        Queue<TreeNode> q= new ArrayDeque<>();
        List<Double> res= new ArrayList<>();
        q.add(root);
        while(!q.isEmpty()){
            Double sum=0.0;
            int len=q.size();
            int s=len;
            while(s-->0){
                TreeNode tmp=q.remove();
                sum+=tmp.val;
                if(tmp.left!=null)
                    q.add(tmp.left);
                if(tmp.right!=null)
                    q.add(tmp.right);
            }
            res.add((double)sum/len);
        }
        return res;
    }
}
